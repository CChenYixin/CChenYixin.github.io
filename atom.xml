<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>速去逮一只猫</title>
  <subtitle>办法总比困难多。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://chenyixin.win/"/>
  <updated>2016-12-11T13:40:58.425Z</updated>
  <id>http://chenyixin.win/</id>
  
  <author>
    <name>Chen Yixin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>表单对齐的两种方式</title>
    <link href="http://chenyixin.win/2016/12/11/title-%20%E8%A1%A8%E5%8D%95%E5%AF%B9%E9%BD%90%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
    <id>http://chenyixin.win/2016/12/11/title- 表单对齐的两种方式/</id>
    <published>2016-12-11T13:08:53.346Z</published>
    <updated>2016-12-11T13:40:58.425Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>文章探讨了两种简单的表单对齐方式，一种是在有固定宽度的情况下，另一种是 width 为 100% 的情况下，核心都是通过给 label 元素设定宽度，再利用 text-align 来达到对齐效果，需要注意的是 input 输入框下的说明文字与 input 框的对齐。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="固定宽度的表单"><a href="#固定宽度的表单" class="headerlink" title="固定宽度的表单"></a>固定宽度的表单</h3><p>首先我们利用表单元素来写一个简易的表单，代码如下：</p>
<pre><code class="html">    &lt;form action=&quot;&quot; method=&quot;&quot;&gt;
        &lt;div&gt;
            &lt;label for=&quot;name&quot;&gt;Name:&lt;/label&gt;
            &lt;input type=&quot;text&quot; id=&quot;name&quot; /&gt;
        &lt;/div&gt;
        &lt;div&gt;
            &lt;label for=&quot;mail&quot;&gt;E-mail:&lt;/label&gt;
            &lt;input type=&quot;email&quot; id=&quot;mail&quot; /&gt;
            &lt;p class=&quot;tips&quot;&gt;填上你的邮箱地址&lt;/p&gt;
        &lt;/div&gt;
        &lt;div&gt;
            &lt;label for=&quot;msg&quot;&gt;Message:&lt;/label&gt;
            &lt;textarea id=&quot;msg&quot;&gt;&lt;/textarea&gt;
        &lt;/div&gt;

        &lt;div class=&quot;button&quot;&gt;
            &lt;button type=&quot;submit&quot;&gt;Send your message&lt;/button&gt;
        &lt;/div&gt;
    &lt;/form&gt;
</code></pre>
<p>然后在给其添加 CSS ：</p>
<pre><code class="css">        form {
            margin: 0 auto;
            width: 400px;
            padding: 1em;
            border: 1px solid #ccc;
            border-radius: 1em;
        }

        form div+div {
            margin-top: 1em;
        }

        label {
            /* 重要代码 */
            display: inline-block;
            width: 90px;
            text-align: right;
        }

        form p {
            /* 这个额外的外边距大致充当了label和说明文字的间距 */
            margin-left: .5em;
        }

        form .tips {
            font-size: 12px;
            color: #888;
            /* 将说明文字置于和文本框相同的位置 */
            padding-left: 90px;
        }

        input,
        textarea {
            font: 1em sans-serif;
            width: 300px;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
            border: 1px solid #999;
        }

        input:focus,
        textarea:focus {
            border-color: #000;
        }

        textarea {
            vertical-align: top;
            height: 5em;
            resize: vertical;
        }

        .button {
            /* 将按钮置于和文本框相同的位置 */
            padding-left: 90px;
            /* 和label元素一样大小 */
        }

        button {
            /* 这个额外的外边距大致充当了label和对应文本框间的间距 */
            margin-left: .5em;
        }
</code></pre>
<p>效果如图所示：</p>
<p><img src="http://ohqryljkl.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20161211203847.png" alt=""></p>
<h3 id="width-为-100-的表单"><a href="#width-为-100-的表单" class="headerlink" title="width 为 100% 的表单"></a>width 为 100% 的表单</h3><p>首先我们利用表单元素来写一个简易的表单，代码如下：</p>
<pre><code class="html">&lt;form&gt;
            &lt;div class=&quot;&quot;&gt;
                &lt;label class=&quot;tips&quot; for=&quot;email&quot;&gt;请输入这个邮箱地址：&lt;/label&gt;
                &lt;input type=&quot;text&quot; name=&quot;emailss&quot; id=&quot;email&quot;&gt;
                &lt;p&gt;邮箱地址请按要求格式输入&lt;/p&gt;
            &lt;/div&gt;
        &lt;/form&gt;
        &lt;form&gt;
            &lt;div class=&quot;&quot;&gt;
                &lt;label class=&quot;tips&quot; for=&quot;pw1&quot;&gt;请输入密码：&lt;/label&gt;
                &lt;input type=&quot;password&quot; name=&quot;pwd1&quot;&gt;
            &lt;/div&gt;
            &lt;div class=&quot;&quot;&gt;
                &lt;label class=&quot;tips&quot; for=&quot;pw1&quot;&gt;请重复输入密码：&lt;/label&gt;
                &lt;input type=&quot;password&quot; name=&quot;pwd1&quot;&gt;
                &lt;p&gt;密码请为6-16位英文数字&lt;/p&gt;
            &lt;/div&gt;
        &lt;/form&gt;
        &lt;form action=&quot;&quot; method=&quot;post&quot;&gt;
            &lt;div class=&quot;&quot;&gt;
                &lt;label class=&quot;tips&quot;&gt;性别：&lt;/label&gt;
                &lt;input type=&quot;radio&quot; checked=&quot;checked&quot; name=&quot;Sex&quot; value=&quot;male&quot; /&gt;男
                &lt;input type=&quot;radio&quot; name=&quot;Sex&quot; value=&quot;female&quot; /&gt;女
            &lt;/div&gt;
            &lt;div class=&quot;&quot;&gt;
                &lt;label class=&quot;tips&quot;&gt;城市：&lt;/label&gt;
                &lt;select name=&quot;&quot;&gt;
                    &lt;option value=&quot;北京&quot; selected=&quot;selected&quot;&gt;北京&lt;/option&gt;
                    &lt;option value=&quot;上海&quot;&gt;上海&lt;/option&gt;
                    &lt;option value=&quot;西安&quot;&gt;西安&lt;/option&gt;
            &lt;/select&gt;
            &lt;/div&gt;
            &lt;div class=&quot;&quot;&gt;
                &lt;label class=&quot;tips&quot;&gt;爱好：&lt;/label&gt;
                &lt;input type=&quot;checkbox&quot; name=&quot;checkbox1&quot; value=&quot;checkbox&quot;&gt;运动
                &lt;input type=&quot;checkbox&quot; name=&quot;checkbox2&quot; value=&quot;checkbox&quot;&gt;艺术
                &lt;input type=&quot;checkbox&quot; name=&quot;checkbox3&quot; value=&quot;checkbox&quot;&gt;科学
            &lt;/div&gt;
            &lt;div class=&quot;&quot;&gt;
                &lt;label class=&quot;tips&quot;&gt;个人描述：&lt;/label&gt;
                &lt;textarea name=&quot;des&quot; cols=&quot;30&quot; rows=&quot;2&quot;&gt;这是一个多行输入框，输入你的个人描述&lt;/textarea&gt;
                &lt;input type=&quot;submit&quot; value=&quot;submit&quot; class=&quot;submitButton&quot; /&gt;
            &lt;/div&gt;
        &lt;/form&gt;
</code></pre>
<p>然后在给其添加 CSS ：</p>
<pre><code class="css">aside form div {
    font-size: 14px;
    margin: 15px 0;
}

aside form div .tips {
    /* 设置label的宽度，让label浮动，右对齐，设置的padding-right的大小和下面提示文字的padding-left相等 */
    float: left;
    text-align: right;
    width: 35%;
    padding-right: 15px;
}

aside form div p {
    /* margin-left与label标签的宽度一样，设置的padding-left的大小和上面label的padding-right相等 */
    margin-left: 35%;
    padding-left: 15px;
    font-size: 12px;
    color: #aaa;
}

aside textarea {
    width: 50%;
    height: 100px;
}

aside .submitButton {
    width: 100%;
    height: 40px;
    border: none;
    border-radius: 10px;
    color: white;
    background-color: #128fdc;
    font-size: 20px;
}

aside .submitButton:hover {
    background: #0063dc;
}
</code></pre>
<p>效果如图所示：</p>
<p><img src="http://ohqryljkl.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20161211203905.png" alt=""></p>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ol>
<li>HTML 表单支持不少伪类，用以表现各元素的状态。比如，我们可以在组件被激活时作突出显示，这样可以方便用户知道表单填到哪一。</li>
<li>HTML5 拥有多个新的表单输入类型。这些新特性提供了更好的输入控制和验证。比如 placeholder 属性。placeholder 属性提供一种提示（hint），描述输入域所期待的值。</li>
</ol>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul>
<li>首先是要让 label 对齐。方法一种使用 display 让 label 变成行内块级元素，设置宽度后，利用 text-align 右对齐；方法二使用 float 让 label 浮动 再设置宽度，然后右对齐。</li>
<li>其次需要注意的 input 下的说明文字需要和输入框对齐。都是利用 label 的宽度 和 padding 、margin值来得出说明文字 P 的 margin-left 和 padiing-left。</li>
</ul>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul>
<li><a href="http://www.w3school.com.cn/html/html_forms.asp" target="_blank" rel="external">HTML 表单</a></li>
<li><a href="https://segmentfault.com/a/1190000005367699" target="_blank" rel="external">HTML表单指南—第一个HTML表单</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;p&gt;文章探讨了两种简单的表单对齐方式，一种是在有固定宽度的情况下，另一种是 width 为 100% 的情况下，核心都是通过给 label 元素
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>关于 Atom 的插件和主题无法安装的问题</title>
    <link href="http://chenyixin.win/2016/12/08/title-%20%E5%85%B3%E4%BA%8E%20Atom%20%E7%9A%84%E6%8F%92%E4%BB%B6%E5%92%8C%E4%B8%BB%E9%A2%98%E6%97%A0%E6%B3%95%E5%AE%89%E8%A3%85%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://chenyixin.win/2016/12/08/title- 关于 Atom 的插件和主题无法安装的问题/</id>
    <published>2016-12-08T13:59:43.365Z</published>
    <updated>2016-12-08T14:00:02.540Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>关于Atom 的插件和主题安装无法在设置中下载和安装的解决办法。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>今天折腾了一下 Atom ，这个 Github 官方出品的编辑器的发展势头相当迅猛。不过在安装使用过程中却遇到了很多问题。Atom的安装比较简单，默认一键安装在 C 盘。官方有修改安装路径的教程，不过我并没有使用。在Atom的主题和插件安装上遇到了麻烦，就是在 Setting 中无法安装这个问题。</p>
<p>Atom 中文社区给出了以下<a href="http://atom-china.org/t/atom/797/2" target="_blank" rel="external">解决方案</a>：</p>
<ul>
<li>给 apm 绑代理，可以直接使用 socks 代理</li>
<li>使用 proxychains-ng445 绑 socks 代理，然后 用 apm 命令安装 atom 插件</li>
<li>或者试试国内 npm 源</li>
<li>使用 VPN</li>
</ul>
<p>不管可能是由于我个人原因或网路问题。即无法通过  apm 下载插件，也没办法在设置中下载，即使是在挂了 VPN 或使用了sock代理的情况下也无法安装和下载。只能退而求其次手动下载，多次的安装是相当的麻烦。</p>
<p>下面给出手动下载的解决办法：</p>
<ol>
<li>找到 Atom 的 package 文件夹，这个是放置 Atom 插件和主题的地方，可以直接在 C 盘中寻找，一般在<code>C:\Users\XXXX\.atom\packages</code>这个路径之下，或者在 Atom 的 setting 页面中点击 open config folder 进入到 Atom 的配置项目，然后我们转到该项目下的 Windows 窗口进入 package 文件夹。</li>
<li>在 Atom 的官方<a href="https://atom.io/packages" target="_blank" rel="external">插件主题网站</a>中浏览或者查找自己所需要的插件和主题。</li>
<li>找到插件的 Github 地址，并复制备用。</li>
<li>在 packages 文件夹中运行 Git Bash，并依次输入以下命令：<pre><code>git clone https://github.com/emmetio/emmet-atom （以emmet-atom为例，将插件的源代码克隆到文件夹中）
cd emmet-atom （进入插件包文件夹）
npm install （生成插件）
</code></pre></li>
<li>重启 Atom，安装完成。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;p&gt;关于Atom 的插件和主题安装无法在设置中下载和安装的解决办法。&lt;/p&gt;
&lt;h2 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用 Github Pages 和 Hexo 搭建个人独立博客（Win 10环境下）</title>
    <link href="http://chenyixin.win/2016/12/06/title-%20%E4%BD%BF%E7%94%A8%20Github%20Pages%20%E5%92%8C%20Hexo%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%8B%AC%E7%AB%8B%E5%8D%9A%E5%AE%A2%EF%BC%88Win%2010%E7%8E%AF%E5%A2%83%E4%B8%8B%EF%BC%89/"/>
    <id>http://chenyixin.win/2016/12/06/title- 使用 Github Pages 和 Hexo 搭建个人独立博客（Win 10环境下）/</id>
    <published>2016-12-06T07:00:13.531Z</published>
    <updated>2016-12-08T13:28:06.119Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>这是一篇使用 Github Pages 和 Hexo 来搭建个人博客的笔记，记录了搭建博客的过程与其中遇到的问题。其中主要包括了以下几个部分：如何配置和使用 Hexo 框架，如何将配置好的 Hexo 部署到 Github项目中，如何绑定域名，以及 Hexo 简单优化和常用命令。</p>
<hr>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="一、Hexo-的配置和使用"><a href="#一、Hexo-的配置和使用" class="headerlink" title="一、Hexo 的配置和使用"></a>一、Hexo 的配置和使用</h3><h4 id="1、Hexo-是什么？"><a href="#1、Hexo-是什么？" class="headerlink" title="1、Hexo 是什么？"></a>1、Hexo 是什么？</h4><p>Hexo 是一款简洁、快速且高效的博客框架，可以在很短的时间内利用主题生成静态网页。</p>
<h4 id="2、Hexo-安装前提"><a href="#2、Hexo-安装前提" class="headerlink" title="2、Hexo 安装前提"></a>2、Hexo 安装前提</h4><p>Hexo 的安装非常简单，在 Hexo 安装必须首先安装以下应用程序：</p>
<ul>
<li>Node.js<br>  可以简单理解为一种 Javascript 的运行环境或者平台，可以用来做服务器，执行某些任务。</li>
<li>Git<br>  Git 是一种分布式版本控制工具，可以用来将远程代码仓库复制到本地，或者将本地仓库推送到远程仓库。</li>
</ul>
<p>在相对应的网站主页下载应用程序，然后安装即可。Windows 系统安装相对应的版本。</p>
<p>Node.js <a href="https://nodejs.org/zh-cn/" target="_blank" rel="external">点我前往下载页面</a></p>
<p><img src="http://ohqryljkl.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20161206102456.png" alt="Node.js"></p>
<p>Git <a href="https://git-scm.com/" target="_blank" rel="external">点我前往下载页面</a></p>
<p><img src="http://ohqryljkl.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20161206102517.png" alt="Git"></p>
<p>下载完成后鼠标点击右键选择 Git Bash Here 就可以打开 Git 打开后如下图所示：</p>
<p><img src="http://ohqryljkl.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20161206104023.png" alt=""></p>
<h4 id="3、Hexo-的安装和配置"><a href="#3、Hexo-的安装和配置" class="headerlink" title="3、Hexo 的安装和配置"></a>3、Hexo 的安装和配置</h4><p>桌面点击鼠标右键，选择 Git Bash Here，输入 npm 命令即可安装</p>
<pre><code>$ npm install -g hexo-cli
</code></pre><p>注意，如果没有 VPN 的话可能下载的速度会很慢很慢，如果出现这种状况，可以选择淘宝的 npm 源：</p>
<pre><code>npm install -g cnpm --registry=https://registry.npm.taobao.org
</code></pre><p>安装完成后，在任意自己喜欢的位置创建 Hexo 文件夹，比如我的是（G:\Blog\Hexo），然后鼠标右键，选择 Git Bash Here，进入 Git 的命令框，执行以下操作：</p>
<pre><code>$ hexo init
$ npm install
</code></pre><p>耐心等待后，可以看到该文件夹中已经安装了 Hexo 所需要的文件</p>
<p><img src="http://ohqryljkl.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20161206110543.png" alt="文件目录"></p>
<p>继续执行下面的命令，即可在浏览器中登陆 localhost:4000 在本地查看效果：</p>
<pre><code>$ hexo generate
$ hexo server
</code></pre><p><img src="http://ohqryljkl.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20161206111045.png" alt="图片"></p>
<p>至此， Hexo 的安装已经全部结束，但仅仅在本地查看博客显然不是我们的目的，为了让别人也可以看到我们的博客，相互交流，我们需要把它发布到服务器上。而 Github Pages 可以给我们提供这个免费的服务器，省去了自己搭建服务器和数据库的麻烦。</p>
<hr>
<h3 id="二、将博客部署到-Github-Pages-上"><a href="#二、将博客部署到-Github-Pages-上" class="headerlink" title="二、将博客部署到 Github Pages 上"></a>二、将博客部署到 Github Pages 上</h3><h4 id="1、Github-Pages是什么？"><a href="#1、Github-Pages是什么？" class="headerlink" title="1、Github  Pages是什么？"></a>1、Github  Pages是什么？</h4><p>Github Pages可以被认为是用户编写的、托管在github上的静态网页。可以绑定你的域名，Github Pages可以为你提供一个免费的服务器，你可以使用它来做博客。</p>
<h4 id="2、创建"><a href="#2、创建" class="headerlink" title="2、创建"></a>2、创建</h4><p>假如你没有 Github 账号你需要登陆主页点击 Sign Up 注册自己的账号，随后在 Github中创建一个仓库，<br>需要<strong>注意</strong>的是仓库是有规则的，其格式必须为：yourusername.github.io。比如我的用户名为：<code>onepiece</code>，那么这个仓库名（Repository name）必须为：<code>onepiece.github.io</code>。</p>
<p><img src="http://ohqryljkl.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20161206115947.png" alt="创建仓库"></p>
<p>然后需要配置 Github 的 SSH 密钥来让本地的项目与远程的 Github建立联系，我们在本地写好代码后，可以直接通过 Git操作实现本地代码库与 Github 代码库同步。因为我个人以前下载了 Github 客户端，使用客户端进行上传或者克隆到本地，所以本机已经有密钥存在，并不需要按照下面的教程配置SSH。所以配置SSH请参考：这篇文章中的<a href="https://my.oschina.net/ryaneLee/blog/638440" target="_blank" rel="external">配置SSH</a>部分，以及这篇<a href="http://www.cnblogs.com/ayseeing/p/3572582.html" target="_blank" rel="external">Github添加密钥</a>。</p>
<h4 id="3、将-Hexo-部署到-Github"><a href="#3、将-Hexo-部署到-Github" class="headerlink" title="3、将 Hexo 部署到 Github"></a>3、将 Hexo 部署到 Github</h4><ol>
<li><p>登陆 Github 打开自己的项目 username.github.io</p>
<p><img src="http://ohqryljkl.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20161206125247.png" alt="打开项目"></p>
</li>
<li><p>点击<code>clone or download</code>复制地址</p>
</li>
</ol>
<p><img src="http://ohqryljkl.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20161206125247.png" alt="复制地址"></p>
<ol>
<li>打开你一开始创建的Hexo文件夹（如G:\Blog\Hexo），用记事本打开刚文件夹下的_config.yml（这个是Hexo 的配置文件，以后要经常用到）文件</li>
</ol>
<p><img src="http://ohqryljkl.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20161206125712.png" alt="配置文件"></p>
<ol>
<li>找到如图所示的关键词<code>deploy</code>，然后做出相对应的修改</li>
</ol>
<p><img src="http://ohqryljkl.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20161206125738.png" alt="修改"></p>
<ol>
<li>在 Hexo 文件夹下执行命令<pre><code>$ hexo g -d
</code></pre><img src="http://ohqryljkl.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20161206130340.png" alt="部署成功"></li>
</ol>
<p>稍等片刻后（大概不到一分钟中），就已经成功将本地的博客部署到 Github Pages 中，现在在浏览器中输入对应的地址：<code>username.github.io</code>就可以看到我们的博客了。</p>
<h3 id="三、优化我们的博客"><a href="#三、优化我们的博客" class="headerlink" title="三、优化我们的博客"></a>三、优化我们的博客</h3><h4 id="1、主题优化"><a href="#1、主题优化" class="headerlink" title="1、主题优化"></a>1、主题优化</h4><p><a href="https://hexo.io/themes/" target="_blank" rel="external">Hexo主题官网</a> 提供了很多主题供我们使用，你依照个人的喜欢预览挑选主题。我个人使用的是比较常用的一款NexT.Mist，知乎上这个问题<a href="https://www.zhihu.com/question/24422335" target="_blank" rel="external">有哪些好看的 Hexo 主题？</a>下有答主按照star数做了个排行，你可以在其中挑选一款主题供自己使用。</p>
<ol>
<li>首先你要进入这个主题的 Github 地址，将这个地址复制下来，比如<pre><code>https://github.com/iissnan/hexo-theme-next
</code></pre></li>
<li>然后打开 Hexo 文件夹下的 themes目录 （G:\Blog\hexo\themes），右键 Git Bash，输入命令并执行<pre><code>git clone https://github.com/iissnan/hexo-theme-next(此处地址替换成你需要使用的主题的地址)
</code></pre></li>
<li>等待下载完成。</li>
<li>修改配置文件，<strong>注意</strong>是 Hexo 目录下的_config.yml配置文件修改参数<code>theme: hexo-theme-next</code></li>
<li>在 Hexo 目录中右键 Git Bash输入命令并执行。<pre><code>hexo clean   (必须要，不然有时因为缓存问题，服务器更新不了主题)
hexo g -d
</code></pre></li>
<li>等待片刻，然后浏览主页便可以查看相对应的效果。</li>
</ol>
<p>更多有个性的设定，例如</p>
<ul>
<li>设置「RSS」</li>
<li>添加「标签」页面</li>
<li>添加「分类」页面</li>
<li>设置「字体」</li>
<li>设置「代码高亮主题」</li>
<li>侧边栏社交链接</li>
<li>开启打赏功能</li>
<li>设置友情链接</li>
<li>多说评论显示 UA</li>
<li>腾讯公益404页面</li>
<li>站点建立时间</li>
<li>订阅微信公众号</li>
</ul>
<p>等功能，在相应了主题主页有详细的配置说明，你可以点击进入参考设置<a href="http://theme-next.iissnan.com/theme-settings.html#duoshuo-ua" target="_blank" rel="external">NexT的主题配置</a>。</p>
<h4 id="2、SEO优化"><a href="#2、SEO优化" class="headerlink" title="2、SEO优化"></a>2、SEO优化</h4><p>请参考<a href="http://www.jianshu.com/p/86557c34b671" target="_blank" rel="external">Hexo Seo优化</a></p>
<h3 id="四、绑定自己的域名"><a href="#四、绑定自己的域名" class="headerlink" title="四、绑定自己的域名"></a>四、绑定自己的域名</h3><ol>
<li>购买域名，个人博客不需要很顶级的域名，阿里云有很多便宜的域名可以购买。比如我自己的域名：<code>chenyixin.win</code>两年十块钱，所以选择你的域名然后购买就可以了。</li>
<li>在\hexo\source文件夹下创建文件 CNAME，用记事本打开并且添加你的域名。</li>
</ol>
<p><strong>注意</strong>：CNAME的意义，简单说就是别名，即将一个域名射到另一个域名。CNAME是没有后缀的，你可以用记事本创建CNAME，创建完毕后请删除后缀<code>.txt</code>。</p>
<ol>
<li>然后在 Hexo 文件夹提交<pre><code>$ hexo g -d
</code></pre></li>
<li>解析域名</li>
</ol>
<p>你可以选择阿里云的解析。打开阿里云的个人中心，点击域名，有一步解析。我选择的是<a href="https://www.dnspod.cn/" target="_blank" rel="external">DNSPOD解析</a>需要进行如下的设置。</p>
<p>首先打开阿里云的个人中心，点击<code>域名</code>，选择<code>管理</code>，随后点击<code>DNS修改/创建</code>，修改 DNS 为：</p>
<pre><code>f1g1ns2.dnspod.net
f1g1ns1.dnspod.net
</code></pre><p>然后打开<a href="https://www.dnspod.cn/" target="_blank" rel="external">DNSPOD</a>点击添加域名，将你的域名添加进去后，按照如下配置添加记录。</p>
<p><img src="http://ohqryljkl.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20161206140953.png" alt=""></p>
<blockquote>
<p>A记录（A record):<br>A记录在DNS中的意义就是，域名到ip地址的转换。<br>所以，当我们在DNS服务器中添加一个A记录时，是告诉服务器，将某个特定的域名映射到一个ip地址。这个算是最简单直白的转换规则了。</p>
<p>主机记录就是域名前缀，常见用法有：<br>www：解析后的域名为 www.chenyixin.win<br>@：直接解析主域名 chenyixin.win<br><em>：泛解析，匹配其他所有域名 </em>.chenyixin.win</p>
</blockquote>
<ol>
<li>等待生效就可以了，最迟要等待72个小时，但一般不会那么久，随后我们就可以通过域名来访问我们的博客了，如果你通过<code>username.github.io</code>最终也将映射到我们的域名上。</li>
</ol>
<hr>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>此时，使用 Hexo 和 Github Pages 搭建博客就已经告一段落了。接下来，我们可以通过其他的配置来优化我们的博客，或者已经可以开始发布文章了。我在整个搭建博客的过程中，遇到的最大问题首先是下载，没挂VPN下载 Hexo极其的慢，一度然我怀疑人生。但其他的流程很胜利，庆幸没有遇到什么bug。第二个问题是域名解析，当时，心态太着急，基础知识也不够，按照教程绑定了 Github Pages 但就是无法解析成功，后来才发现是因为我的CNAME文件上传的时候带了后缀名。可见基础常识的重要性，如果不是计算机专业的，很可能会犯一些意想之外的问题。另外，简书和谷歌上有很多教程给我提供了很大的帮助，官方文档的阅读也很有用。如果文中有什么错误，烦请大家评论让我改正，有什么问题也可以留言。</p>
<h2 id="参考文章-按照参考频度排名"><a href="#参考文章-按照参考频度排名" class="headerlink" title="参考文章 (按照参考频度排名)"></a>参考文章 (按照参考频度排名)</h2><blockquote>
<p><a href="https://my.oschina.net/ryaneLee/blog/638440" target="_blank" rel="external">Github Pages和Hexo简明教程</a><br><a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="external">Hexo 文档</a><br><a href="https://github.com/iissnan/hexo-theme-next/wiki/%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E5%8F%82%E8%80%83" target="_blank" rel="external">NexT 主题配置</a><br><a href="http://winterttr.me/2015/10/23/from-dns-to-github-custom-domain/" target="_blank" rel="external">从DNS到github pages自定义域名 </a><br><a href="http://www.jianshu.com/p/cea41e5c9b2a/comments/5642824#comment-5642824" target="_blank" rel="external">hexo搭建的Github博客绑定域名</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;p&gt;这是一篇使用 Github Pages 和 Hexo 来搭建个人博客的笔记，记录了搭建博客的过程与其中遇到的问题。其中主要包括了以下几个部分
    
    </summary>
    
    
  </entry>
  
</feed>
