<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[表单对齐的两种方式]]></title>
      <url>%2F2016%2F12%2F11%2Ftitle-%20%E8%A1%A8%E5%8D%95%E5%AF%B9%E9%BD%90%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F%2F</url>
      <content type="text"><![CDATA[摘要文章探讨了两种简单的表单对齐方式，一种是在有固定宽度的情况下，另一种是 width 为 100% 的情况下，核心都是通过给 label 元素设定宽度，再利用 text-align 来达到对齐效果，需要注意的是 input 输入框下的说明文字与 input 框的对齐。 ##正文 固定宽度的表单首先我们利用表单元素来写一个简易的表单，代码如下：12345678910111213141516171819&lt;form action=&quot;&quot; method=&quot;&quot;&gt; &lt;div&gt; &lt;label for=&quot;name&quot;&gt;Name:&lt;/label&gt; &lt;input type=&quot;text&quot; id=&quot;name&quot; /&gt; &lt;/div&gt; &lt;div&gt; &lt;label for=&quot;mail&quot;&gt;E-mail:&lt;/label&gt; &lt;input type=&quot;email&quot; id=&quot;mail&quot; /&gt; &lt;p class=&quot;tips&quot;&gt;填上你的邮箱地址&lt;/p&gt; &lt;/div&gt; &lt;div&gt; &lt;label for=&quot;msg&quot;&gt;Message:&lt;/label&gt; &lt;textarea id=&quot;msg&quot;&gt;&lt;/textarea&gt; &lt;/div&gt; &lt;div class=&quot;button&quot;&gt; &lt;button type=&quot;submit&quot;&gt;Send your message&lt;/button&gt; &lt;/div&gt;&lt;/form&gt; 然后在给其添加 CSS ：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061form &#123; margin: 0 auto; width: 400px; padding: 1em; border: 1px solid #ccc; border-radius: 1em;&#125;form div+div &#123; margin-top: 1em;&#125;label &#123; /* 重要代码 */ display: inline-block; width: 90px; text-align: right;&#125;form p &#123; /* 这个额外的外边距大致充当了label和说明文字的间距 */ margin-left: .5em;&#125;form .tips &#123; font-size: 12px; color: #888; /* 将说明文字置于和文本框相同的位置 */ padding-left: 90px;&#125;input,textarea &#123; font: 1em sans-serif; width: 300px; -moz-box-sizing: border-box; box-sizing: border-box; border: 1px solid #999;&#125;input:focus,textarea:focus &#123; border-color: #000;&#125;textarea &#123; vertical-align: top; height: 5em; resize: vertical;&#125;.button &#123; /* 将按钮置于和文本框相同的位置 */ padding-left: 90px; /* 和label元素一样大小 */&#125;button &#123; /* 这个额外的外边距大致充当了label和对应文本框间的间距 */ margin-left: .5em;&#125; 效果如图所示： width 为 100% 的表单首先我们利用表单元素来写一个简易的表单，代码如下：1234567891011121314151617181920212223242526272829303132333435363738394041424344&lt;form&gt; &lt;div class=&quot;&quot;&gt; &lt;label class=&quot;tips&quot; for=&quot;email&quot;&gt;请输入这个邮箱地址：&lt;/label&gt; &lt;input type=&quot;text&quot; name=&quot;emailss&quot; id=&quot;email&quot;&gt; &lt;p&gt;邮箱地址请按要求格式输入&lt;/p&gt; &lt;/div&gt; &lt;/form&gt; &lt;form&gt; &lt;div class=&quot;&quot;&gt; &lt;label class=&quot;tips&quot; for=&quot;pw1&quot;&gt;请输入密码：&lt;/label&gt; &lt;input type=&quot;password&quot; name=&quot;pwd1&quot;&gt; &lt;/div&gt; &lt;div class=&quot;&quot;&gt; &lt;label class=&quot;tips&quot; for=&quot;pw1&quot;&gt;请重复输入密码：&lt;/label&gt; &lt;input type=&quot;password&quot; name=&quot;pwd1&quot;&gt; &lt;p&gt;密码请为6-16位英文数字&lt;/p&gt; &lt;/div&gt; &lt;/form&gt; &lt;form action=&quot;&quot; method=&quot;post&quot;&gt; &lt;div class=&quot;&quot;&gt; &lt;label class=&quot;tips&quot;&gt;性别：&lt;/label&gt; &lt;input type=&quot;radio&quot; checked=&quot;checked&quot; name=&quot;Sex&quot; value=&quot;male&quot; /&gt;男 &lt;input type=&quot;radio&quot; name=&quot;Sex&quot; value=&quot;female&quot; /&gt;女 &lt;/div&gt; &lt;div class=&quot;&quot;&gt; &lt;label class=&quot;tips&quot;&gt;城市：&lt;/label&gt; &lt;select name=&quot;&quot;&gt; &lt;option value=&quot;北京&quot; selected=&quot;selected&quot;&gt;北京&lt;/option&gt; &lt;option value=&quot;上海&quot;&gt;上海&lt;/option&gt; &lt;option value=&quot;西安&quot;&gt;西安&lt;/option&gt; &lt;/select&gt; &lt;/div&gt; &lt;div class=&quot;&quot;&gt; &lt;label class=&quot;tips&quot;&gt;爱好：&lt;/label&gt; &lt;input type=&quot;checkbox&quot; name=&quot;checkbox1&quot; value=&quot;checkbox&quot;&gt;运动 &lt;input type=&quot;checkbox&quot; name=&quot;checkbox2&quot; value=&quot;checkbox&quot;&gt;艺术 &lt;input type=&quot;checkbox&quot; name=&quot;checkbox3&quot; value=&quot;checkbox&quot;&gt;科学 &lt;/div&gt; &lt;div class=&quot;&quot;&gt; &lt;label class=&quot;tips&quot;&gt;个人描述：&lt;/label&gt; &lt;textarea name=&quot;des&quot; cols=&quot;30&quot; rows=&quot;2&quot;&gt;这是一个多行输入框，输入你的个人描述&lt;/textarea&gt; &lt;input type=&quot;submit&quot; value=&quot;submit&quot; class=&quot;submitButton&quot; /&gt; &lt;/div&gt; &lt;/form&gt; 然后在给其添加 CSS ：123456789101112131415161718192021222324252627282930313233343536373839aside form div &#123; font-size: 14px; margin: 15px 0;&#125;aside form div .tips &#123; /* 设置label的宽度，让label浮动，右对齐，设置的padding-right的大小和下面提示文字的padding-left相等 */ float: left; text-align: right; width: 35%; padding-right: 15px;&#125;aside form div p &#123; /* margin-left与label标签的宽度一样，设置的padding-left的大小和上面label的padding-right相等 */ margin-left: 35%; padding-left: 15px; font-size: 12px; color: #aaa;&#125;aside textarea &#123; width: 50%; height: 100px;&#125;aside .submitButton &#123; width: 100%; height: 40px; border: none; border-radius: 10px; color: white; background-color: #128fdc; font-size: 20px;&#125;aside .submitButton:hover &#123; background: #0063dc;&#125; 效果如图所示： 注意 HTML 表单支持不少伪类，用以表现各元素的状态。比如，我们可以在组件被激活时作突出显示，这样可以方便用户知道表单填到哪一。 HTML5 拥有多个新的表单输入类型。这些新特性提供了更好的输入控制和验证。比如 placeholder 属性。placeholder 属性提供一种提示（hint），描述输入域所期待的值。 总结 首先是要让 label 对齐。方法一种使用 display 让 label 变成行内块级元素，设置宽度后，利用 text-align 右对齐；方法二使用 float 让 label 浮动 再设置宽度，然后右对齐。 其次需要注意的 input 下的说明文字需要和输入框对齐。都是利用 label 的宽度 和 padding 、margin值来得出说明文字 P 的 margin-left 和 padiing-left。 参考文章 HTML 表单 HTML表单指南—第一个HTML表单]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[关于 Atom 的插件和主题无法安装的问题]]></title>
      <url>%2F2016%2F12%2F08%2Ftitle-%20%E5%85%B3%E4%BA%8E%20Atom%20%E7%9A%84%E6%8F%92%E4%BB%B6%E5%92%8C%E4%B8%BB%E9%A2%98%E6%97%A0%E6%B3%95%E5%AE%89%E8%A3%85%E7%9A%84%E9%97%AE%E9%A2%98%2F</url>
      <content type="text"><![CDATA[摘要关于Atom 的插件和主题安装无法在设置中下载和安装的解决办法。 正文今天折腾了一下 Atom ，这个 Github 官方出品的编辑器的发展势头相当迅猛。不过在安装使用过程中却遇到了很多问题。Atom的安装比较简单，默认一键安装在 C 盘。官方有修改安装路径的教程，不过我并没有使用。在Atom的主题和插件安装上遇到了麻烦，就是在 Setting 中无法安装这个问题。 Atom 中文社区给出了以下解决方案： 给 apm 绑代理，可以直接使用 socks 代理 使用 proxychains-ng445 绑 socks 代理，然后 用 apm 命令安装 atom 插件 或者试试国内 npm 源 使用 VPN 不管可能是由于我个人原因或网路问题。即无法通过 apm 下载插件，也没办法在设置中下载，即使是在挂了 VPN 或使用了sock代理的情况下也无法安装和下载。只能退而求其次手动下载，多次的安装是相当的麻烦。 下面给出手动下载的解决办法： 找到 Atom 的 package 文件夹，这个是放置 Atom 插件和主题的地方，可以直接在 C 盘中寻找，一般在C:\Users\XXXX\.atom\packages这个路径之下，或者在 Atom 的 setting 页面中点击 open config folder 进入到 Atom 的配置项目，然后我们转到该项目下的 Windows 窗口进入 package 文件夹。 在 Atom 的官方插件主题网站中浏览或者查找自己所需要的插件和主题。 找到插件的 Github 地址，并复制备用。 在 packages 文件夹中运行 Git Bash，并依次输入以下命令： 123git clone https://github.com/emmetio/emmet-atom （以emmet-atom为例，将插件的源代码克隆到文件夹中）cd emmet-atom （进入插件包文件夹）npm install （生成插件） 重启 Atom，安装完成。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[使用 Github Pages 和 Hexo 搭建个人独立博客（Win 10环境下）]]></title>
      <url>%2F2016%2F12%2F06%2Ftitle-%20%E4%BD%BF%E7%94%A8%20Github%20Pages%20%E5%92%8C%20Hexo%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%8B%AC%E7%AB%8B%E5%8D%9A%E5%AE%A2%EF%BC%88Win%2010%E7%8E%AF%E5%A2%83%E4%B8%8B%EF%BC%89%2F</url>
      <content type="text"><![CDATA[摘要这是一篇使用 Github Pages 和 Hexo 来搭建个人博客的笔记，记录了搭建博客的过程与其中遇到的问题。其中主要包括了以下几个部分：如何配置和使用 Hexo 框架，如何将配置好的 Hexo 部署到 Github项目中，如何绑定域名，以及 Hexo 简单优化和常用命令。 正文一、Hexo 的配置和使用1、Hexo 是什么？Hexo 是一款简洁、快速且高效的博客框架，可以在很短的时间内利用主题生成静态网页。 2、Hexo 安装前提Hexo 的安装非常简单，在 Hexo 安装必须首先安装以下应用程序： Node.js 可以简单理解为一种 Javascript 的运行环境或者平台，可以用来做服务器，执行某些任务。 Git Git 是一种分布式版本控制工具，可以用来将远程代码仓库复制到本地，或者将本地仓库推送到远程仓库。 在相对应的网站主页下载应用程序，然后安装即可。Windows 系统安装相对应的版本。 Node.js 点我前往下载页面 Git 点我前往下载页面 下载完成后鼠标点击右键选择 Git Bash Here 就可以打开 Git 打开后如下图所示： 3、Hexo 的安装和配置桌面点击鼠标右键，选择 Git Bash Here，输入 npm 命令即可安装1$ npm install -g hexo-cli 注意，如果没有 VPN 的话可能下载的速度会很慢很慢，如果出现这种状况，可以选择淘宝的 npm 源：1npm install -g cnpm --registry=https://registry.npm.taobao.org 安装完成后，在任意自己喜欢的位置创建 Hexo 文件夹，比如我的是（G:\Blog\Hexo），然后鼠标右键，选择 Git Bash Here，进入 Git 的命令框，执行以下操作：12$ hexo init$ npm install 耐心等待后，可以看到该文件夹中已经安装了 Hexo 所需要的文件 继续执行下面的命令，即可在浏览器中登陆 localhost:4000 在本地查看效果：12$ hexo generate$ hexo server 至此， Hexo 的安装已经全部结束，但仅仅在本地查看博客显然不是我们的目的，为了让别人也可以看到我们的博客，相互交流，我们需要把它发布到服务器上。而 Github Pages 可以给我们提供这个免费的服务器，省去了自己搭建服务器和数据库的麻烦。 二、将博客部署到 Github Pages 上1、Github Pages是什么？Github Pages可以被认为是用户编写的、托管在github上的静态网页。可以绑定你的域名，Github Pages可以为你提供一个免费的服务器，你可以使用它来做博客。 2、创建假如你没有 Github 账号你需要登陆主页点击 Sign Up 注册自己的账号，随后在 Github中创建一个仓库，需要注意的是仓库是有规则的，其格式必须为：yourusername.github.io。比如我的用户名为：onepiece，那么这个仓库名（Repository name）必须为：onepiece.github.io。 然后需要配置 Github 的 SSH 密钥来让本地的项目与远程的 Github建立联系，我们在本地写好代码后，可以直接通过 Git操作实现本地代码库与 Github 代码库同步。因为我个人以前下载了 Github 客户端，使用客户端进行上传或者克隆到本地，所以本机已经有密钥存在，并不需要按照下面的教程配置SSH。所以配置SSH请参考：这篇文章中的配置SSH部分，以及这篇Github添加密钥。 3、将 Hexo 部署到 Github 登陆 Github 打开自己的项目 username.github.io 点击clone or download复制地址 打开你一开始创建的Hexo文件夹（如G:\Blog\Hexo），用记事本打开刚文件夹下的_config.yml（这个是Hexo 的配置文件，以后要经常用到）文件 找到如图所示的关键词deploy，然后做出相对应的修改 在 Hexo 文件夹下执行命令1$ hexo g -d 稍等片刻后（大概不到一分钟中），就已经成功将本地的博客部署到 Github Pages 中，现在在浏览器中输入对应的地址：username.github.io就可以看到我们的博客了。 三、优化我们的博客1、主题优化Hexo主题官网 提供了很多主题供我们使用，你依照个人的喜欢预览挑选主题。我个人使用的是比较常用的一款NexT.Mist，知乎上这个问题有哪些好看的 Hexo 主题？下有答主按照star数做了个排行，你可以在其中挑选一款主题供自己使用。 首先你要进入这个主题的 Github 地址，将这个地址复制下来，比如 1https://github.com/iissnan/hexo-theme-next 然后打开 Hexo 文件夹下的 themes目录 （G:\Blog\hexo\themes），右键 Git Bash，输入命令并执行 1git clone https://github.com/iissnan/hexo-theme-next(此处地址替换成你需要使用的主题的地址) 等待下载完成。 修改配置文件，注意是 Hexo 目录下的_config.yml配置文件修改参数theme: hexo-theme-next 在 Hexo 目录中右键 Git Bash输入命令并执行。 12hexo clean (必须要，不然有时因为缓存问题，服务器更新不了主题)hexo g -d 等待片刻，然后浏览主页便可以查看相对应的效果。 更多有个性的设定，例如 设置「RSS」 添加「标签」页面 添加「分类」页面 设置「字体」 设置「代码高亮主题」 侧边栏社交链接 开启打赏功能 设置友情链接 多说评论显示 UA 腾讯公益404页面 站点建立时间 订阅微信公众号 等功能，在相应了主题主页有详细的配置说明，你可以点击进入参考设置NexT的主题配置。 2、SEO优化请参考Hexo Seo优化 四、绑定自己的域名 购买域名，个人博客不需要很顶级的域名，阿里云有很多便宜的域名可以购买。比如我自己的域名：chenyixin.win两年十块钱，所以选择你的域名然后购买就可以了。 在\hexo\source文件夹下创建文件 CNAME，用记事本打开并且添加你的域名。 注意：CNAME的意义，简单说就是别名，即将一个域名射到另一个域名。CNAME是没有后缀的，你可以用记事本创建CNAME，创建完毕后请删除后缀.txt。 然后在 Hexo 文件夹提交 1$ hexo g -d 解析域名 你可以选择阿里云的解析。打开阿里云的个人中心，点击域名，有一步解析。我选择的是DNSPOD解析需要进行如下的设置。 首先打开阿里云的个人中心，点击域名，选择管理，随后点击DNS修改/创建，修改 DNS 为：12f1g1ns2.dnspod.netf1g1ns1.dnspod.net 然后打开DNSPOD点击添加域名，将你的域名添加进去后，按照如下配置添加记录。 A记录（A record):A记录在DNS中的意义就是，域名到ip地址的转换。所以，当我们在DNS服务器中添加一个A记录时，是告诉服务器，将某个特定的域名映射到一个ip地址。这个算是最简单直白的转换规则了。 主机记录就是域名前缀，常见用法有：www：解析后的域名为 www.chenyixin.win@：直接解析主域名 chenyixin.win：泛解析，匹配其他所有域名 .chenyixin.win 等待生效就可以了，最迟要等待72个小时，但一般不会那么久，随后我们就可以通过域名来访问我们的博客了，如果你通过username.github.io最终也将映射到我们的域名上。 总结此时，使用 Hexo 和 Github Pages 搭建博客就已经告一段落了。接下来，我们可以通过其他的配置来优化我们的博客，或者已经可以开始发布文章了。我在整个搭建博客的过程中，遇到的最大问题首先是下载，没挂VPN下载 Hexo极其的慢，一度然我怀疑人生。但其他的流程很胜利，庆幸没有遇到什么bug。第二个问题是域名解析，当时，心态太着急，基础知识也不够，按照教程绑定了 Github Pages 但就是无法解析成功，后来才发现是因为我的CNAME文件上传的时候带了后缀名。可见基础常识的重要性，如果不是计算机专业的，很可能会犯一些意想之外的问题。另外，简书和谷歌上有很多教程给我提供了很大的帮助，官方文档的阅读也很有用。如果文中有什么错误，烦请大家评论让我改正，有什么问题也可以留言。 参考文章 (按照参考频度排名) Github Pages和Hexo简明教程Hexo 文档NexT 主题配置从DNS到github pages自定义域名 hexo搭建的Github博客绑定域名]]></content>
    </entry>

    
  
  
</search>
